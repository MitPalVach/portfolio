{"version":3,"sources":["store/types.ts","store/actions/photosActions.ts","components/Input.tsx","components/Intro.tsx","components/Modal.tsx","App.tsx","reportWebVitals.ts","store/reducers/photosReducer.ts","store/index.ts","index.tsx"],"names":["GET_PHOTOS","SET_ERROR","client","createClient","process","getPhotos","page","searchQuery","onSuccess","onError","dispatch","a","photos","search","query","per_page","Error","error","type","payload","total_results","setError","getCuratedPhotos","curated","err","Input","placeholder","value","name","onChange","className","id","required","autoComplete","Intro","onSearch","useState","setSearch","onSubmit","e","preventDefault","currentTarget","Modal","src","onClose","authorName","authorUrl","imageLoading","setImageLoading","onClick","alt","onLoad","href","target","rel","App","useDispatch","useSelector","state","mode","setMode","loading","setLoading","searchFor","setSearchFor","setPage","title","setTitle","btnLoading","setBtnLoading","showModal","setShowModal","setSrc","setAuthorName","setAuthorUrl","useEffect","content","length","columnsCountBreakPoints","480","900","gutter","map","photo","large","original","photographer_url","photographer","imageClickHandler","prev","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","photoReducer","action","photosArr","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d930031.chunk.js","sourcesContent":["import { Photo } from 'pexels';\n\nexport const GET_PHOTOS = 'GET_PHOTOS';\nexport const SET_ERROR = 'SET_ERROR';\n\nexport interface PhotosState {\n  photos: Photo[];\n  total_results: number;\n  error: string; \n}\n\ninterface GetPhotosAction {\n  type: typeof GET_PHOTOS;\n  payload: {\n    photos: Photo[];\n    page: number;\n    total_results: number;\n  }\n} \n\ninterface SetErrorAction {\n  type: typeof SET_ERROR;\n  payload: string;\n}\n\nexport type PhotosAction = SetErrorAction | GetPhotosAction;","import {createClient, PhotosWithTotalResults, ErrorResponse, Photos} from 'pexels';\nimport {ThunkAction} from 'redux-thunk';\n\nimport {RootState} from '../';\nimport {PhotosAction, GET_PHOTOS, SET_ERROR} from '../types';\n\nconst client = createClient(process.env.REACT_APP_PEXELS_API || '');\n// const client = createClient('error was called');\n\nexport const getPhotos = (page: number, searchQuery: string, onSuccess: () => void, onError: () => void): ThunkAction<void, RootState, null, PhotosAction> => {\n    return async dispatch => {\n        try {\n            const photos: PhotosWithTotalResults | ErrorResponse = await client.photos.search({\n                page,\n                query: searchQuery,\n                per_page: 10\n            });\n\n            if (\"error\" in photos) {\n                throw new Error(photos.error);\n            } else {\n                dispatch({\n                    type: GET_PHOTOS,\n                    payload: {\n                        photos: photos.photos,\n                        page: page,\n                        total_results: photos.total_results\n                    }\n                });\n                onSuccess();\n            }\n\n        } catch (err) {\n            dispatch(setError('err.message'));\n            onError();\n        }\n    }\n}\n\nexport const getCuratedPhotos = (page: number, onSuccess: () => void, onError: () => void): ThunkAction<void, RootState, null, PhotosAction> => {\n    return async dispatch => {\n        try {\n            const photos: Photos | ErrorResponse = await client.photos.curated({page, per_page: 10});\n\n            if (\"error\" in photos) {\n                throw new Error(photos.error);\n            } else {\n                dispatch({\n                    type: GET_PHOTOS,\n                    payload: {\n                        photos: photos.photos,\n                        page: page,\n                        total_results: 0\n                    }\n                });\n                onSuccess();\n            }\n        } catch (err) {\n            dispatch(setError('err.message'));\n            onError();\n        }\n    }\n}\n\nexport const setError = (err: string): PhotosAction => {\n    return {\n        type: SET_ERROR,\n        payload: err\n    }\n}","import {FC, InputHTMLAttributes} from \"react\";\n\n\nconst Input: FC<InputHTMLAttributes<HTMLInputElement>> = ({type = 'text', placeholder, value, name, onChange}) => {\n    return (\n        <div className='field mb-0'>\n            <div className='control'>\n                <input\n                    className='input is-large'\n                    type={type}\n                    placeholder={placeholder}\n                    value={value}\n                    name={name}\n                    id={name}\n                    onChange={onChange}\n                    required\n                    autoComplete='off'/>\n            </div>\n        </div>\n    )\n}\n\nexport default Input\n\n\n","import React, {FC, FormEvent, useState} from 'react';\nimport Input from \"./Input\";\n\n\ninterface IntroProps {\n  onSearch: (value:string) => void\n}\n\nconst Intro: FC<IntroProps> = ({onSearch}) => {\n  const [search, setSearch] = useState('')\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault()\n    onSearch(search)\n    setSearch('')\n  }\n\n  return (\n      <section className='hero is-medium is-dark has-text-centered is-bold'>\n        <div className='hero-body'>\n          <div className='container'>\n            <h1 className='title is-uppercase mb-6'>Бесплатные картинки с pexels</h1>\n            <form onSubmit={submitHandler} className='form'>\n              <Input value={search} onChange={(e)=> setSearch(e.currentTarget.value)} placeholder='Поиск...'/>\n              <button className='button is-large is-danger ml-4'>Поиск</button>\n            </form>\n          </div>\n        </div>\n      </section>\n  );\n};\n\nexport default Intro;\n\n\n\n\n\n\n\n\n","import React, {FC, useState} from 'react';\n\ninterface ModalProps {\n    src: string;\n    onClose: () => void;\n    authorName: string;\n    authorUrl: string;\n}\n\nconst Modal: FC<ModalProps> = ({src, onClose, authorName, authorUrl}) => {\n    const [imageLoading, setImageLoading] = useState(true);\n\n    return (\n        <div className=\"modal is-active\">\n            <div className=\"modal-background\" onClick={onClose}></div>\n            <div className=\"modal-content\">\n                {imageLoading && <div className=\"loading-wrapper\">\n                    <div className=\"loading\"></div>\n                </div>}\n                <img src={src} alt=\"\" onLoad={() => setImageLoading(false)}\n                     className={imageLoading ? 'is-hidden' : ''}/>\n                {!imageLoading &&\n                <p className=\"author\">Author: <a href={authorUrl} target=\"_blank\" rel=\"noreferrer\">{authorName}</a></p>}\n            </div>\n            <button className=\"modal-close is-large\" onClick={onClose}></button>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, { FC, useEffect, useState, MouseEvent, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport './App.css';\nimport { getPhotos, getCuratedPhotos, setError } from './store/actions/photosActions';\nimport { RootState } from './store';\nimport Intro from './components/Intro';\nimport Modal from './components/Modal';\nimport { Photo } from 'pexels';\n\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const { photos, total_results, error } = useSelector((state: RootState) => state.photos);\n  const [mode, setMode] = useState('trending');\n  const [loading, setLoading] = useState(true);\n  const [searchFor, setSearchFor] = useState('');\n  const [page, setPage] = useState(1);\n  const [title, setTitle] = useState('Популярные');\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [src, setSrc] = useState('');\n  const [authorName, setAuthorName] = useState('');\n  const [authorUrl, setAuthorUrl] = useState('');\n\n  useEffect(() => {\n    dispatch(getCuratedPhotos(1, () => setLoading(false), () => setLoading(false)));\n  }, [dispatch]);\n\n  const searchPhotosHandler = (query: string) => {\n    if(error) {\n      setError('');\n    }\n    setMode('search');\n    setLoading(true);\n    setSearchFor(query);\n    setPage(1);\n    dispatch(getPhotos(1, query, () => setLoading(false), () => setLoading(false)));\n    setTitle(`Результат поиска для запроса - \"${query}\"`);\n  }\n\n  const loadMoreHandler = () => {\n    setBtnLoading(true);\n    setPage(prev => prev + 1);\n    if(mode === 'trending') {\n      dispatch(getCuratedPhotos(page + 1, () => setBtnLoading(false), () => setBtnLoading(false)));\n    }else {\n      dispatch(getPhotos(page + 1, searchFor, () => setBtnLoading(false), () => setBtnLoading(false)));\n    }\n  }\n\n  const showTrendingPhotos = () => {\n    setLoading(true);\n    setTitle('Популярные');\n    setMode('trending');\n    dispatch(getCuratedPhotos(1, () => setLoading(false), () => setLoading(false)));\n  }\n\n  const modalCloseHandler = () => {\n    setSrc('');\n    setAuthorName('');\n    setAuthorUrl('');\n    setShowModal(false);\n  }\n\n  const imageClickHandler = (e: MouseEvent, photo: Photo) => {\n    e.preventDefault();\n    setSrc(photo.src.original);\n    setAuthorUrl(photo.photographer_url);\n    setAuthorName(photo.photographer);\n    setShowModal(true);\n  }\n\n  let content = null;\n\n  if(loading) {\n    content = <div className=\"is-flex is-justify-content-center py-6\"><div className=\"loading\"></div></div>;\n  }else {\n    content = (\n      error \n        ? <div className=\"notification is-danger mt-6 has-text-centered\">{error}</div>\n        : <Fragment>\n          {mode === 'search' && <div className=\"is-flex is-justify-content-center pt-5\">\n            <button className=\"button is-link\" onClick={showTrendingPhotos}>Вернуться к популярным</button>\n          </div>}\n          <h2 className=\"is-size-1 has-text-centered py-6\">{title}</h2>\n          {photos.length > 0\n            ? <ResponsiveMasonry columnsCountBreakPoints={{480: 2, 900: 5}}>\n              <Masonry gutter={20}>\n                {photos.map(photo => (\n                  <div key={photo.id} className=\"masonry-item\">\n                    <a href=\"/#\" onClick={(e) => {}}>\n                      <img src={photo.src.large} alt=\"\" onClick={(e) => imageClickHandler(e, photo)} />\n                    </a>\n                  </div>\n                ))}\n              </Masonry>\n            </ResponsiveMasonry>\n            : <p className=\"has-text-centered\">Поиск не дал результатов</p>\n          }\n\n          <div className=\"is-flex is-justify-content-center py-6\">\n            {((total_results > page * 10) || mode === 'trending') \n              && <button className=\"button is-primary is-large\" onClick={loadMoreHandler} disabled={btnLoading}>\n                  {!btnLoading ? 'Загрузить еще' : <div className=\"loading loading--small\"></div>}\n                </button>\n            }\n          </div>\n        </Fragment>\n    );\n  }\n\n  return (\n    <div>\n      <Intro onSearch={searchPhotosHandler} />\n      <div className=\"container px-4\">\n        { content }\n      </div>\n      {showModal && <Modal src={src} onClose={modalCloseHandler} authorName={authorName} authorUrl={authorUrl} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {Photo} from 'pexels';\nimport {PhotosState, PhotosAction, GET_PHOTOS, SET_ERROR} from '../types';\n\nconst initialState: PhotosState = {\n    photos: [],\n    total_results: 0,\n    error: ''\n}\n\nconst photoReducer = (state = initialState, action: PhotosAction): PhotosState => {\n    switch (action.type) {\n        case GET_PHOTOS:\n            const {page, photos, total_results} = action.payload;\n            let photosArr: Photo[] = [];\n            if (page > 1) {\n                photosArr = [...state.photos, ...photos];\n            } else {\n                photosArr = photos;\n            }\n            return {\n                ...state,\n                photos: photosArr,\n                total_results: total_results,\n                error: ''\n            }\n        case SET_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default photoReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport photoReducer from './reducers/photosReducer';\n\nconst rootReducer = combineReducers({\n  photos: photoReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}