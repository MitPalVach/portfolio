{"version":3,"sources":["components/Users/Users.module.css","components/Users/User.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","userPhoto","User","props","className","styles","usersItems","to","user","id","usersPhoto","alt","src","photos","small","followed","disabled","followingInProgress","includes","onClick","unfollow","follow","name","status","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","statusText","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","profileImg","large","avatar","avatarImg","Preloader","Post","postsItem","postsItem__inner","postsItem__avatar","post","message","postsItem__activity","postsItem__like","likeCount","postsItem__send","maxLength50","maxLengthCreator","reduxForm","form","profileFormWrapper","onSubmit","handleSubmit","Field","profileMessages__input","component","Textarea","placeholder","validate","required","profileMessages__btn","MyPosts","React","memo","postElements","profilePage","postData","map","p","values","addPost","newPostText","posts","MyPostsContainer","connect","state","dispatch","addPostAC","Profile","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","withRouter","useDispatch","match","params"],"mappings":"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","file":"static/js/3.67d33fb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersInner\":\"Users_usersInner__2v4Ca\",\"usersWrapper\":\"Users_usersWrapper__2gv8N\",\"users__leftSide\":\"Users_users__leftSide__2K0Yk\",\"usersPhoto\":\"Users_usersPhoto__3osYH\",\"usersBtn\":\"Users_usersBtn__1iOAv\",\"users__rightSide\":\"Users_users__rightSide__2yxXk\",\"pagination\":\"Users_pagination__2Njh9\",\"usersPagination\":\"Users_usersPagination__1qbrf\",\"pages\":\"Users_pages__2ZPtK\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"usersItems\":\"Users_usersItems__3D9Hj\",\"pageBtnDisplayNone\":\"Users_pageBtnDisplayNone__2TZjX\",\"pageBtn\":\"Users_pageBtn__2Wtq-\"};","import React from 'react';\nimport styles from \"./Users.module.css\";\n// import userPhoto from \"./avatar_to_all.png\";\nimport {UserType} from \"../../redux/usersReducer\";\nimport {NavLink} from 'react-router-dom';\nexport const userPhoto = 'https://images.pexels.com/photos/1564839/pexels-photo-1564839.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n\n\ntype UserPropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\nconst User = (props: UserPropsType): JSX.Element => {\n\n    return (\n        <div className={styles.usersItems}>\n            <NavLink to={'/profile/' + props.user.id}>\n                <img className={styles.usersPhoto} alt={'user_photo'}\n                     src={props.user.photos.small !== null ? props.user.photos.small : userPhoto}/>\n            </NavLink>\n            <div>\n                {props.user.followed\n                    ? <button disabled={props.followingInProgress.includes(props.user.id)} onClick={() => {\n                        props.unfollow(props.user.id)\n                    }}>Unfollow</button>\n                    : <button disabled={props.followingInProgress.includes(props.user.id)} onClick={() => {\n                        props.follow(props.user.id)\n                    }}>Follow</button>}\n            </div>\n            <span>\n                    <span>\n                        <div>{props.user.name}</div>\n                        <div>{props.user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"props.location.country\"}</div>\n                        <div>{\"props.location.city\"}</div>\n                    </span>\n                </span>\n        </div>\n    )\n};\n\nexport default User;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"ProfileInfo_profileImg__3mXT7\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"avatarImg\":\"ProfileInfo_avatarImg__2izmI\",\"myPosts\":\"ProfileInfo_myPosts__1no8m\",\"myPosts__input\":\"ProfileInfo_myPosts__input__3tJm9\",\"myPosts__button\":\"ProfileInfo_myPosts__button__19Gsk\",\"statusText\":\"ProfileInfo_statusText__1KWIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"myPosts__input_inner\":\"MyPosts_myPosts__input_inner__3ju60\",\"myPosts__input\":\"MyPosts_myPosts__input__3c6Pi\",\"myPosts__button\":\"MyPosts_myPosts__button__2y1hV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsItem\":\"Post_postsItem__1DHL5\",\"postsItem__inner\":\"Post_postsItem__inner__1-7QK\",\"postsItem__avatar\":\"Post_postsItem__avatar__3N6Bd\",\"postsItem__messages\":\"Post_postsItem__messages__1V62h\",\"postsItem__activity\":\"Post_postsItem__activity__1G8T2\",\"postsItem__like\":\"Post_postsItem__like__3sh5I\",\"postsItem__send\":\"Post_postsItem__send__QVbcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileFormWrapper\":\"Profile_profileFormWrapper__1TJsL\",\"profileMessages__input\":\"Profile_profileMessages__input__1M3bu\",\"profileMessages__btn\":\"Profile_profileMessages__btn__1SIl3\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport styles from './ProfileInfo.module.css';\n\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst ProfileStatus = (props: ProfileStatusType) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [status, setStatus] = useState<string>(props.status)\n\n    useEffect(() => {\n      setStatus(props.status)\n    }, [props.status])\n\n    const activeMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={styles.statusText}>\n            {!editMode &&\n            <span onDoubleClick={activeMode}>\n                    {status || 'no status'}\n                </span>}\n            {editMode &&\n            <input onChange={onStatusChange}\n                   onBlur={deactivateEditMode}\n                   autoFocus={true}\n                   value={status}\n            />}\n        </div>\n    )\n}\n\n\nexport default ProfileStatus","import React from \"react\";\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport {userPhoto} from \"../../Users/User\";\n// import owlEyes from '../../../images/owl_eyes.jpeg';\n\n\ntype PhotosType = {\n    photos: {\n        small: string\n        large: string\n    }\n}\ntype ProfileInfoType = {\n    profile: PhotosType\n    status: string\n    updateStatus: (status: string) => void\n}\nconst ProfileInfo = (props: ProfileInfoType) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n                <img className={styles.profileImg}\n                     src={props.profile.photos.large || userPhoto}\n                    // src={owlEyes}\n                     alt='owl'/>\n            </div>\n            <div className={styles.avatar}>\n                {props.profile.photos.large &&\n                <img className={styles.avatarImg}\n                     src={props.profile.photos.large} alt=\"avatar\"/>}\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport styles from './Post.module.css';\n// import avatar_to_all from './../../../../images/avatar_to_all.png'\nimport {PostDataType} from \"../../../../redux/store\";\nconst avatar_to_all = 'https://images.pexels.com/photos/1564839/pexels-photo-1564839.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n\n\ntype PostType = {\n    post: PostDataType\n}\nconst Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={styles.postsItem}>\n            <div className={styles.postsItem__inner}>\n                <img className={styles.postsItem__avatar}\n                     src={avatar_to_all}\n                     alt=\"avatar_to_all\"/>\n                {props.post.message}\n            </div>\n            <div className={styles.postsItem__activity}>\n                <span className={styles.postsItem__like}>{props.post.likeCount} Нравится</span>\n                <span className={styles.postsItem__send}>Написать сообщение</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport styles from '../Profile.module.css'\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nconst AddPostForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form className={styles.profileFormWrapper} onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.profileMessages__input}\n                       component={Textarea}\n                       name='newPostText'\n                       placeholder={'Введите сообщение'}\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button className={styles.profileMessages__btn}>Написать</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'profileAddPostForm'})(AddPostForm)\n","import React from \"react\";\nimport styles from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {ProfileUserType} from \"../../../redux/profileReducer\";\nimport AddPostForm from \"../AddPostForm/AddPostForm\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n    addPost: (newPostText: string) => void\n}\n\nconst MyPosts = React.memo((props: PropsType) => {\n    let state = props.profilePage\n    let postElements = state.postData.map(p => <Post key={p.id} post={p}/>);\n\n    let onAddPost = (values: any) => {\n        props.addPost(values.newPostText)\n        values.newPostText = ''\n    }\n\n    return (\n        <div>\n            <div>\n                <AddPostForm onSubmit={onAddPost}/>\n            </div>\n            <div className={styles.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n})\n\n\nexport default MyPosts;\n\n\n// class MyPosts extends React.PureComponent<PropsType> {\n//\n//     // shouldComponentUpdate(nextProps: Readonly<PropsType>, nextState: Readonly<{}>): boolean {\n//     //     return this.props === nextProps || nextState === this.state\n//     // }\n//\n//     render() {\n//         console.log('sd');\n//         let state = this.props.profilePage\n//         let postElements = state.postData.map(p => <Post key={p.id} post={p}/>);\n//         // let postElements = this.props.profilePage.postData.map(p => <Post post={p} key={p.id}/>)\n//\n//         let onAddPost = (values: any) => {\n//             this.props.addPost(values.newPostText)\n//             values.newPostText = ''\n//         }\n//\n//         return (\n//             <div>\n//                 <div>\n//                     <AddPostForm onSubmit={onAddPost}/>\n//                 </div>\n//                 <div className={styles.posts}>\n//                     {postElements}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\n","import React from \"react\";\nimport {ActionsTypes, RootStateType} from \"../../../redux/store\";\nimport {addPostAC, ProfileUserType} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n}\n\nlet mapStateToProps = (state: RootStateType) => {\n    return {\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostAC(newPostText))\n        },\n    }\n}\n\nconst MyPostsContainer: React.FC<PropsType> = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileUserType} from \"../../redux/profileReducer\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n    getUserProfile: (userId: number) => void\n    // getStatus: () => void\n    updateStatus: (status: string) => void\n}\nconst Profile: React.FC<PropsType> = ({profilePage, updateStatus}) => {\n    return (\n        <div>\n            <ProfileInfo profile={profilePage.profile}\n                         status={profilePage.status}\n                         updateStatus={updateStatus}\n            />\n            <MyPostsContainer profilePage={profilePage}/>\n        </div>\n    )\n}\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport {getStatus, getUserProfile, ProfileUserType, setStatus, updateStatus} from \"../../redux/profileReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {compose} from \"redux\";\n\n\ntype PathParamsType = {\n    userId: string\n}\ntype MapStatePropsType = {\n    profilePage: ProfileUserType\n    authorizedUserId: number | null\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: number) => void\n    // getStatus: () => void\n    updateStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst ProfileContainer = (props: PropsType) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        let userId = +props.match.params.userId;\n        if (!userId) {\n            userId = props.authorizedUserId || 0;\n            // if (!userId) {                               // раскомент\n            //     props.history.push('/login')\n            // }\n        }\n        dispatch(getUserProfile(userId))\n        dispatch(setStatus(userId))\n    }, [])\n    return <Profile getUserProfile={props.getUserProfile}\n                    // getStatus={props.getStatus}\n                    updateStatus={props.updateStatus}\n                    profilePage={props.profilePage}/>\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profilePage: state.profilePage,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\nexport default compose<React.ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n        getUserProfile,\n        // getStatus,\n        updateStatus\n    }),\n    withRouter,\n)(ProfileContainer)\n\n"],"sourceRoot":""}