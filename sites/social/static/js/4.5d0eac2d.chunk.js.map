{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mstp","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","module","exports","DialogItem","className","styles","dialogs__item","dialogs__itemLink","to","dialogs","id","activeClassName","dialogs__itemLink_active","dialogs__itemLink_img","src","friendsAvatar","alt","dialogs__item_name","name","Message","dialogsMessages__item","messages","message","maxLength50","maxLengthCreator","reduxForm","form","dialogFormWrapper","onSubmit","handleSubmit","Field","dialogMessages__input","component","Textarea","placeholder","validate","required","dialogMessages__btn","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogUsers","dialogMessages__wrapper","dir__title","dialogMessages","values","sendMessage","newMessageBody","compose","dispatch","sendMessageAC"],"mappings":"mLASMA,EAAO,SAACC,GACV,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAoBC,GAMhC,OAAOC,YAAQN,EAARM,EALmB,SAACC,GACMA,EAAxBL,OADuC,IAC5BM,EAD2B,YACdD,EADc,YAG3C,OAAO,cAACF,EAAD,eAAeG,S,oBClB9BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,YAAc,6BAA6B,wBAA0B,yCAAyC,eAAiB,gCAAgC,kBAAoB,mCAAmC,sBAAwB,uCAAuC,oBAAsB,uC,oBCAzYD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,sBAAwB,0CAA0C,kBAAoB,sCAAsC,yBAA2B,6CAA6C,mBAAqB,yC,oBCA7RD,EAAOC,QAAU,CAAC,sBAAwB,yC,+GCuB3BC,EAd+B,SAACJ,GAC3C,OACI,qBAAKK,UAAWC,IAAOC,cAAvB,SACI,eAAC,IAAD,CAASF,UAAWC,IAAOE,kBAClBC,GAAI,YAAcT,EAAMU,QAAQC,GAAIC,gBAAiBN,IAAOO,yBADrE,UAEI,qBAAKR,UAAWC,IAAOQ,sBAAuBC,IAAKf,EAAMU,QAAQM,cAAeC,IAAI,KACpF,qBAAKZ,UAAWC,IAAOY,mBAAvB,SACKlB,EAAMU,QAAQS,a,kBCEpBC,EAXyB,SAACpB,GAErC,OACI,8BACI,qBAAKK,UAAWC,IAAOe,sBAAvB,SACKrB,EAAMsB,SAASC,SAD+BvB,EAAMsB,SAASX,O,kCCLxEa,EAAcC,YAAiB,IAmBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAlB4C,SAAC1B,GACxD,OACI,uBAAMK,UAAWC,IAAOsB,kBAAmBC,SAAU7B,EAAM8B,aAA3D,UACI,8BACI,cAACC,EAAA,EAAD,CAAO1B,UAAWC,IAAO0B,sBAClBC,UAAWC,IACXf,KAAK,iBACLgB,YAAa,oGACbC,SAAU,CAACC,IAAUb,OAGhC,8BACI,wBAAQnB,UAAWC,IAAOgC,oBAA1B,sECiBDC,EAzBsB,SAACvC,GAClC,IAAIN,EAAQM,EAAMwC,YACdC,EAAkB/C,EAAMgB,QAAQgC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBjC,QAASiC,GAAfA,EAAEhC,OAC5DiC,EAAmBlD,EAAM4B,SAASoB,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAoBvB,SAAUuB,GAAhBA,EAAElC,OAM/D,OACI,sBAAKN,UAAWC,IAAOI,QAAvB,UACI,qBAAKL,UAAWC,IAAOwC,YAAvB,SACKL,IAEL,sBAAKpC,UAAWC,IAAOyC,wBAAvB,UACI,oBAAI1C,UAAWC,IAAO0C,WAAtB,uBACA,qBAAK3C,UAAWC,IAAO2C,eAAvB,SACKL,IAEL,cAAC,EAAD,CAAgBf,SAdR,SAACqB,GACjBlD,EAAMmD,YAAYD,EAAOE,0B,yBCIlBC,sBACXtD,aAdkB,SAACL,GACnB,MAAO,CACH8C,YAAa9C,EAAM8C,gBAGF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAcH,SAO/BvD,IAFWwD,CAGbd","file":"static/js/4.5d0eac2d.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/reduxStore\";\n\n\ntype mstpType = {\n    isAuth: boolean\n}\nconst mstp = (state: AppStateType): mstpType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: mstpType) => {\n        let {isAuth, ...restProps} = props\n        // if (!isAuth) return <Redirect to={'/login'}/>  // раскомент\n        return <Component {...restProps as T}/>\n    }\n    return connect(mstp)(RedirectComponent)\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dir__title\":\"Dialogs_dir__title__euGaD\",\"dialogUsers\":\"Dialogs_dialogUsers__3n8lx\",\"dialogMessages__wrapper\":\"Dialogs_dialogMessages__wrapper__3yGDs\",\"dialogMessages\":\"Dialogs_dialogMessages__3ag9d\",\"dialogFormWrapper\":\"Dialogs_dialogFormWrapper__16edN\",\"dialogMessages__input\":\"Dialogs_dialogMessages__input__1ACmk\",\"dialogMessages__btn\":\"Dialogs_dialogMessages__btn__QhydC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__item\":\"DialogItem_dialogs__item__1Cdio\",\"dialogs__itemLink_img\":\"DialogItem_dialogs__itemLink_img__cYh4p\",\"dialogs__itemLink\":\"DialogItem_dialogs__itemLink__tlNq4\",\"dialogs__itemLink_active\":\"DialogItem_dialogs__itemLink_active__2OIAv\",\"dialogs__item_name\":\"DialogItem_dialogs__item_name__3uvlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages__item\":\"Message_dialogsMessages__item__fepUr\"};","import styles from './DialogItem.module.css';\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsType} from \"../../../redux/dialogsReducer\";\n\n\n\ntype DialogItemTypes = {\n    dialogs:DialogsType\n}\nconst DialogItem: React.FC<DialogItemTypes> = (props) => {\n    return (\n        <div className={styles.dialogs__item}>\n            <NavLink className={styles.dialogs__itemLink}\n                     to={\"/dialogs/\" + props.dialogs.id} activeClassName={styles.dialogs__itemLink_active}>\n                <img className={styles.dialogs__itemLink_img} src={props.dialogs.friendsAvatar} alt=\"\"/>\n                <div className={styles.dialogs__item_name}>\n                    {props.dialogs.name}\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import styles from './Message.module.css';\nimport React from \"react\";\nimport {MessagesType} from \"../../../redux/dialogsReducer\";\n\n\ntype MessageTypes = {\n    messages: MessagesType\n}\nconst Message: React.FC<MessageTypes> = (props) => {\n\n    return (\n        <div>\n            <div className={styles.dialogsMessages__item} key={props.messages.id}>\n                {props.messages.message}\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport styles from \"../Dialogs.module.css\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nexport const AddMessageForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form className={styles.dialogFormWrapper} onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.dialogMessages__input}\n                       component={Textarea}\n                       name='newMessageBody'\n                       placeholder={'Введите сообщение'}\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button className={styles.dialogMessages__btn}>Написать</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../redux/store\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nexport type PropsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (newMessageBody: string) => void\n}\nconst Dialogs: React.FC<PropsType> = (props) => {\n    let state = props.dialogsPage\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} dialogs={d}/>);\n    let messagesElements = state.messages.map(m => <Message key={m.id} messages={m}/>);\n\n    let addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialogUsers}>\n                {dialogsElements}\n            </div>\n            <div className={styles.dialogMessages__wrapper}>\n                <h4 className={styles.dir__title}> Dialogs </h4>\n                <div className={styles.dialogMessages}>\n                    {messagesElements}\n                </div>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageAC} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {ActionsTypes, RootStateType} from \"../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state: RootStateType) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\n    return {\n        sendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageAC(newMessageBody))\n        },\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}