{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Navbar/FriendsOnline/FriendsAvatar/FriendsAvatar.tsx","components/Navbar/FriendsOnline/FriendsOnline.tsx","components/Navbar/FriendsOnline/FriendsOnlineContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Photo/Photo.tsx","components/Video/Video.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","api/api.ts","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Common/FormControls/FormControls.tsx","utils/validators.ts","components/Login/Login.tsx","redux/friendsOnlineReducer.ts","redux/dialogsReducer.ts","redux/profileReducer.ts","redux/usersReducer.ts","redux/appReducer.tsx","redux/reduxStore.ts","components/Common/Preloader/Preloader.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","components/App/App.tsx","index.tsx","components/Common/FormControls/FormControls.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/App/App.module.css","components/Navbar/FriendsOnline/FriendsAvatar/FriendsAvatar.module.css","components/Login/Login.module.css","components/Profile/Profile.module.css","components/Navbar/FriendsOnline/FriendsOnline.module.css"],"names":["module","exports","FriendsAvatar","props","className","styles","fOnline__inner","fOnline__name","name","fOnline__ava","src","ava","alt","FriendsOnline","friendsAvatar","friendsOnline","sidebar","map","f","id","fOnline","fOnline__title","FriendsOnlineContainer","connect","state","Navbar","navbar","navbarItem","navbarItem__link","activeClassName","active","to","News","Music","Photo","Video","Settings","Header","header","header__inner","href","headerLogo","headerTitle","loginBlock","isAuth","login","loginLogoutBtn","onClick","logout","instance","axios","create","withCredentials","baseURL","headers","usersApi","currentPage","pageSize","get","then","response","data","userId","delete","post","console","warn","profileApi","getProfile","getStatus","updateStatus","status","put","authApi","email","password","rememberMe","SET_USER_DATA","initialState","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","authReducer","action","HeaderContainer","this","React","Component","auth","Textarea","input","meta","restProps","showError","touched","error","formControl","errorMessage","Input","inputWindow","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","loginFormWrapper","Field","aria-label","placeholder","component","validate","formSummaryError","loginBtn","message","messages","stopSubmit","_error","formData","friendsOnlineReducer","SEND_MESSAGE","dialogs","dialogsReducer","newMessageBody","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_UPDATE_STATUS","postData","likeCount","profile","setStatus","setUpdateStatus","getUserProfile","profileReducer","newPost","newPostText","filter","p","postId","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","ON_PAGE_CHANGED","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","pageNumber","isFetching","followingInProgress","portionSize","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","SUCCESS_INITIALIZED","initialized","successInitialized","appReducer","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","preloader","Preloader","style","background","DialogItem","dialogs__item","dialogs__itemLink","dialogs__itemLink_active","dialogs__itemLink_img","dialogs__item_name","Message","dialogsMessages__item","maxLength50","dialogFormWrapper","dialogMessages__input","dialogMessages__btn","Dialogs","dialogsElements","d","messagesElements","m","dialogUsers","dialogMessages__wrapper","dir__title","dialogMessages","values","sendMessage","mstp","withAuthRedirect","sendMessageAC","ProfileStatus","useState","editMode","setEditMode","useEffect","statusText","onDoubleClick","onChange","e","currentTarget","onBlur","autoFocus","ProfileInfo","profileImg","avatar","photos","large","avatarImg","Post","postsItem","postsItem__inner","postsItem__avatar","postsItem__activity","postsItem__like","postsItem__send","profileFormWrapper","profileMessages__input","profileMessages__btn","MyPosts","memo","postElements","addPost","posts","MyPostsContainer","addPostAC","Profile","authorizedUserId","withRouter","useDispatch","match","params","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","usersPagination","pageBtn","selectedPage","onPageChanged","User","usersItems","user","usersPhoto","small","disabled","includes","unfollow","follow","Users","usersInner","getUsersSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","getUsers","page","items","totalCount","App","initializeApp","container","app__wrapper","content__wrapper","content__inner","fallback","path","render","DialogsContainer","AppContainer","promise","Promise","all","SocialApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d6138db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"navbarItem\":\"Navbar_navbarItem__1xOtf\",\"navbarItem__link\":\"Navbar_navbarItem__link__2g1i6\",\"active\":\"Navbar_active__3mbhk\",\"friendsOnline\":\"Navbar_friendsOnline__2Jno3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages__item\":\"Message_dialogsMessages__item__fepUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"myPosts__input_inner\":\"MyPosts_myPosts__input_inner__3ju60\",\"myPosts__input\":\"MyPosts_myPosts__input__3c6Pi\",\"myPosts__button\":\"MyPosts_myPosts__button__2y1hV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersInner\":\"Users_usersInner__2v4Ca\",\"usersWrapper\":\"Users_usersWrapper__2gv8N\",\"users__leftSide\":\"Users_users__leftSide__2K0Yk\",\"usersPhoto\":\"Users_usersPhoto__3osYH\",\"usersBtn\":\"Users_usersBtn__1iOAv\",\"users__rightSide\":\"Users_users__rightSide__2yxXk\",\"pagination\":\"Users_pagination__2Njh9\",\"usersPagination\":\"Users_usersPagination__1qbrf\",\"pages\":\"Users_pages__2ZPtK\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"usersItems\":\"Users_usersItems__3D9Hj\",\"pageBtnDisplayNone\":\"Users_pageBtnDisplayNone__2TZjX\",\"pageBtn\":\"Users_pageBtn__2Wtq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dir__title\":\"Dialogs_dir__title__euGaD\",\"dialogUsers\":\"Dialogs_dialogUsers__3n8lx\",\"dialogMessages__wrapper\":\"Dialogs_dialogMessages__wrapper__3yGDs\",\"dialogMessages\":\"Dialogs_dialogMessages__3ag9d\",\"dialogFormWrapper\":\"Dialogs_dialogFormWrapper__16edN\",\"dialogMessages__input\":\"Dialogs_dialogMessages__input__1ACmk\",\"dialogMessages__btn\":\"Dialogs_dialogMessages__btn__QhydC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"header__inner\":\"Header_header__inner__26ef8\",\"headerLogo\":\"Header_headerLogo__pHUY0\",\"headerTitle\":\"Header_headerTitle__3Y2pE\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"loginLogoutBtn\":\"Header_loginLogoutBtn__31tEv\"};","import React from 'react';\nimport styles from './FriendsAvatar.module.css';\n\n\ntype PropsType = {\n    id:number\n    name: string\n    ava:string\n}\nconst FriendsAvatar:React.FC<PropsType> = (props) => {\n    return (\n        <div className={styles.fOnline__inner}>\n            <div className={styles.fOnline__name}>{props.name}</div>\n            <img className={styles.fOnline__ava} src={props.ava} alt=\"\"/>\n        </div>\n    );\n};\n\nexport default FriendsAvatar;","import React from 'react';\nimport styles from './FriendsOnline.module.css';\nimport {FriendsOnlineType} from \"../../../redux/store\";\nimport FriendsAvatar from \"./FriendsAvatar/FriendsAvatar\";\n\n\ntype PropsType ={\n    friendsOnline: FriendsOnlineType\n}\nconst FriendsOnline:React.FC<PropsType> = (props) => {\nlet state = props.friendsOnline\n    let friendsAvatar = state.sidebar.map(f => <FriendsAvatar\n        key={f.id}\n        name={f.name}\n        ava={f.ava}\n        id={f.id}\n    />);\n    return (\n        <div className={styles.fOnline}>\n            <h5 className={styles.fOnline__title}>Друзья онлайн</h5>\n            {friendsAvatar}\n        </div>\n    );\n};\n\nexport default FriendsOnline;\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsOnline from \"./FriendsOnline\";\nimport {RootStateType} from \"../../../redux/store\";\n\n\nlet mapStateToProps = (state:RootStateType) => {\n    return {\n        friendsOnline: state.friendsOnline\n    }\n}\n\nconst FriendsOnlineContainer: React.FC = connect(mapStateToProps)(FriendsOnline)\n\nexport default FriendsOnlineContainer;\n\n","import styles from './Navbar.module.css';\nimport React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsOnlineContainer from \"./FriendsOnline/FriendsOnlineContainer\";\n\n\nconst Navbar:React.FC = () => {\n\n    return (\n        <nav className={styles.navbar}>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/profile\"}>\n                    Профиль</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/dialogs\"} >\n                    Сообщения</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/users\"} >\n                    Друзья</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/news\"} >\n                    Новости</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/music\"} >\n                    Музыка</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/photo\"} >\n                    Фото</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/video\"} >\n                    Видео</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/settings\"} >\n                    Настройки</NavLink>\n            </div>\n            <div className={styles.friendsOnline}>\n\n                <FriendsOnlineContainer />\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport styles from './News.module.css';\n\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport styles from './Music.module.css';\n\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport styles from './Photo.module.css';\n\n\nconst Photo = () => {\n    return (\n        <div>\n            Photo\n        </div>\n    )\n}\n\nexport default Photo;","import React from \"react\";\nimport styles from './Video.module.css';\n\n\nconst Video = () => {\n    return (\n        <div>\n            Video\n        </div>\n    )\n}\n\nexport default Video;","import React from \"react\";\nimport styles from './Settings.module.css';\n\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport styles from './Header.module.css'\n\n\ntype PropsType = {\n    isAuth: boolean\n    login: string | null\n    logout: () => void\n}\nconst Header: React.FC<PropsType> = (props) => {\n    return (\n        <header className={styles.header}>\n            <a className={styles.header__inner} href={\"/profile\"}>\n                <img className={styles.headerLogo} src='https://img.icons8.com/ios/452/owl.png'\n                     alt=\"logo\"/>\n            </a>\n            <a className={styles.header__inner} href={\"/profile\"}>\n                <h1 className={styles.headerTitle}>owlbook.com</h1>\n            </a>\n            <div className={styles.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} <button className={styles.loginLogoutBtn} onClick={props.logout}>Выйти</button></div>\n                    : <NavLink className={styles.loginLogoutBtn} to={'/login'}>войти</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import axios from \"axios\";\nimport {ProfileUserType} from \"../redux/profileReducer\";\nimport {AuthPropsType} from \"../redux/authReducer\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': '411482a7-ac02-48c2-a201-383524308513'},\n})\n\nexport const usersApi = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`\n        )\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`\n        )\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please profileApi object')\n        return profileApi.getProfile(userId)\n    },\n}\n\n// ====\n\nexport const profileApi = {\n    getProfile(userId: number) {\n        return instance.get<ProfileUserType>(`profile/${userId}`)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status/`, {status})\n    },\n}\n\n// ====\n\nexport const authApi = {\n    me() {\n        return instance.get<AuthPropsType>(`auth/me`)\n    },\n    login(email: string, password: string, rememberMe: boolean) {\n        return instance.post<AuthPropsType>(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete<AuthPropsType>(`auth/login`)\n    },\n}","import {Dispatch} from \"redux\";\nimport {authApi} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {RootDispatchType} from \"./reduxStore\";\n\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\n\nexport type AuthPropsType = {\n    resultCode: number\n    messages: Array<string>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\nexport type AuthType = {\n    userId: number | null\n    email: string | null\n    login: string | null\n    isAuth: boolean\n}\nexport type InitialStateType = AuthType\n\nlet initialState = {\n    userId: null as number | null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport type ActionsTypes = ReturnType<typeof setAuthUserData>\n\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => {\n    return {\n        type: SET_USER_DATA,\n        payload: {userId, email, login, isAuth}\n    } as const\n}\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\n    let response = await authApi.me()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: RootDispatchType) => {\n    let response = await authApi.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        await dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Ошибка ввода'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch: Dispatch) => {\n    let response = await authApi.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer\n\n\n\n\n\n\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\n\ntype OwnProps = {}\ntype MapStateToPropsType = {\n    isAuth: boolean\n    login: string | null\n}\ntype MapDispatchType = {\n    logout: () => void\n}\ntype OwnPropsType = MapStateToPropsType & MapDispatchType\n\nclass HeaderContainer extends React.Component<OwnPropsType> {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\nexport default connect<MapStateToPropsType, MapDispatchType, OwnProps, AppStateType>(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport styles from './FormControls.module.css';\nimport {WrappedFieldProps} from \"redux-form\";\n\n\nexport const Textarea = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\nexport const Input = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea className={styles.inputWindow} {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\n\n\n","export const required = (value: string) => {\n    if (value) return undefined\n\n    return 'Обязательно заполните';\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Не больше ${maxLength} символов`\n\n    return undefined\n}\n\n\n\n\n\n\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../Common/FormControls/FormControls\";\nimport styles from './Login.module.css';\nimport {required} from \"../../utils/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\n\ntype LoginPropsType = {\n    isAuth: boolean\n    login: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype FormDataType = {\n    email: string,\n    password: string,\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={styles.loginFormWrapper}>\n            <div>\n                <Field aria-label='Email'\n                       placeholder='Email'\n                       type='Email'\n                       name='email'\n                       component={Input}\n                       validate={required}/>\n            </div>\n            <div>\n                <Field aria-label='Password'\n                       placeholder='Пароль'\n                       type='password'\n                       name='password'\n                       component={Input}\n                       validate={required}/>\n            </div>\n            <div>\n                <Field type='checkbox'\n                       name='rememberMe'\n                       component={'input'}/> Запомнить\n            </div>\n            {props.error && <div className={styles.formSummaryError}>{props.error}</div>}\n            <div>\n                <button className={styles.loginBtn}>Login</button>\n            </div>\n        </form>\n    );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\n\n\nconst Login = (props: LoginPropsType) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    // if (props.isAuth) {\n    //     return <Redirect to={'/profile'}/>\n    // }\n\n    return (\n        <div>\n            <h1>Логин</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n};\nconst mstp = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mstp, {login})(Login);\n","// import ava1 from \"../images/ava_1.png\";\n// import ava2 from \"../images/ava_2.png\";\n// import ava3 from \"../images/ava_3.png\";\nconst ava = 'https://cdn-icons-png.flaticon.com/512/12/12426.png'\n\nexport type SidebarType = {\n    id: number\n    name: string\n    ava: string\n}\nexport type InitialStateType = {\n    sidebar: Array<SidebarType>\n}\nlet initialState: InitialStateType = {\n    sidebar: [\n        {id: 1, name: 'Неясыть', ava: ava},\n        {id: 2, name: 'Филин', ava: ava},\n        {id: 3, name: 'Полярная сова', ava: ava}\n    ]\n}\nconst friendsOnlineReducer = (state: InitialStateType = initialState) => {\n    return state\n}\n\nexport default friendsOnlineReducer","// import filin from \"../images/friends_avatars/filin.jpeg\";\n// import sipuha from \"../images/friends_avatars/sipuha.jpeg\";\n// import rybniyFilin from \"../images/friends_avatars/rybniy-filin.jpeg\";\nconst tom = 'https://images.pexels.com/photos/3622695/pexels-photo-3622695.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\nconst alex = 'https://images.pexels.com/photos/3732453/pexels-photo-3732453.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\nconst jane = 'https://images.pexels.com/photos/6474755/pexels-photo-6474755.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\n\nconst SEND_MESSAGE = 'SEND-MESSAGE'\n\nexport type MessagesType = {\n    id: number\n    message: string\n}\nexport type DialogsType = {\n    id: number\n    name: string\n    friendsAvatar: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Tom', friendsAvatar: tom},\n        {id: 2, name: 'Alex', friendsAvatar: alex},\n        {id: 3, name: 'Jane', friendsAvatar: jane}\n    ] as Array<DialogsType>,\n    messages: [\n        {id: 1, message: 'Hello'},\n        {id: 2, message: 'Hi'},\n        {id: 3, message: 'Bye'},\n    ] as Array<MessagesType>,\n}\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\n\n    switch (action.type) {\n        case SEND_MESSAGE:\n            return {\n                ...state,\n                messages: [{id: 6, message: action.newMessageBody}, ...state.messages]\n            };\n    }\n    return state\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof sendMessageAC>\n\nexport const sendMessageAC = (newMessageBody: string) => {\n    return {\n        type: SEND_MESSAGE,\n        newMessageBody\n    } as const\n}\n\nexport default dialogsReducer","import {PostDataType} from \"./store\";\nimport {profileApi, usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./reduxStore\";\n\n\nconst ADD_POST = \"ADD-POST\"\nconst DELETE_POST = 'DELETE_POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_USER_STATUS = 'SET_USER_STATUS'\nconst SET_UPDATE_STATUS = 'SET_UPDATE_STATUS'\n\nlet initialState = {\n    postData: [\n        {message: 'Hi, how are you?', id: 1, likeCount: 12},\n        {message: 'What do you think about JS?', id: 2, likeCount: 22},\n        {message: 'I learn not only JS but and TS!', id: 3, likeCount: 42},\n        {message: 'Oh, it\\'s cool', id: 4, likeCount: 23}\n    ],\n    // newPostText: '',\n    profile: null,\n    status: '',\n}\nexport type ProfileUserType = {\n    profile: {\n        userId: number\n        lookingForAJob: boolean\n        lookingForAJobDescription: string\n        fullName: string\n        contacts: ContactsType\n        photos: {\n            small: string\n            large: string\n        },\n    }\n    postData: Array<PostDataType>\n    newPostText: string\n    status: string\n}\ntype ContactsType = {\n    github: string\n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\n\ntype InitStateType = typeof initialState\n\nconst profileReducer = (state: InitStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                postData: [newPost, ...state.postData],\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                postData: state.postData.filter(p => p.id !== action.postId)\n            }\n        }\n        case SET_USER_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_UPDATE_STATUS: {\n            return {...state, status: action.status}\n        }\n    }\n    return state\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof addPostAC>\n    | ReturnType<typeof setUserProfile>\n    | ReturnType<typeof setStatus>\n    | ReturnType<typeof setUpdateStatus>\n    | ReturnType<typeof deletePost>\n\nexport const addPostAC = (newPostText: string) => {\n    return {\n        type: ADD_POST,\n        newPostText\n    } as const\n}\nexport const deletePost = (postId: number) => {\n    return {\n        type: DELETE_POST,\n        postId\n    } as const\n}\nexport const setUserProfile = (profile: ProfileUserType) => {\n    return {\n        type: SET_USER_PROFILE,\n        profile\n    } as const\n}\nexport const setStatus = (status: number) => {\n    return {\n        type: SET_USER_STATUS,\n        status\n    } as const\n}\nexport const setUpdateStatus = (status: string) => {\n    return {\n        type: 'SET_UPDATE_STATUS',\n        status\n    } as const\n}\nexport const getUserProfile = (userId: number) => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n    let response = await usersApi.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n    await dispatch(getStatus(userId))\n}\nexport const getStatus = (userId: number) => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n    let response = await profileApi.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\n    let response = await profileApi.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setUpdateStatus(status))\n    }\n}\n\nexport default profileReducer","import {usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst ON_PAGE_CHANGED = 'ON_PAGE_CHANGED'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\nexport type LocationType = {\n    city: string\n    country: string\n}\nexport type UserType = {\n    id: number\n    photos: {\n        small: string\n        large: string\n    }\n    followed: boolean\n    name: string\n    status: string\n    location: LocationType\n}\nexport type InitialStateType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    pageNumber: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n    portionSize: number\n}\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 20,\n    totalUsersCount: 0,\n    currentPage: 1,\n    pageNumber: 1,\n    isFetching: true,\n    followingInProgress: [],\n    portionSize: 10,\n}\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        case ON_PAGE_CHANGED: {\n            return {...state, pageNumber: action.pageNumber}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter((id: number) => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof followSuccess> | ReturnType<typeof unfollowSuccess>\n    | ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount> | ReturnType<typeof onPageChanged>\n    | ReturnType<typeof toggleIsFetching> | ReturnType<typeof toggleFollowingProgress>\n\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: SET_TOTAL_USERS_COUNT, totalUsersCount\n} as const)\nexport const onPageChanged = (pageNumber: number) => ({type: ON_PAGE_CHANGED, pageNumber} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n} as const)\n\nexport const getUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    let data = await usersApi.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let response = await usersApi.follow(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(followSuccess(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let response = await usersApi.unfollow(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(unfollowSuccess(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\n// refactor ->\n// const followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: (userId: number) => void, ac: (userId: number) => void) => {\n//     dispatch(toggleFollowingProgress(true, userId))\n//     let response = await apiMethod(userId)\n//     if (response.data.resultCode === 0) {\n//         dispatch(ac(userId))\n//     }\n//     dispatch(toggleFollowingProgress(false, userId))\n// }\n//\n// export const follow = (userId: number) => async (dispatch: Dispatch) => {\n//     followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess)\n// }\n// export const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n//     followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess)\n// }\n\nexport default usersReducer;","import {getAuthUserData} from \"./authReducer\";\nimport {RootDispatchType} from \"./reduxStore\";\n\nconst SUCCESS_INITIALIZED = 'SUCCESS_INITIALIZED';\n\nexport type AppInitialStateType = {\n    initialized: boolean\n}\nexport type ActionsTypes = ReturnType<typeof successInitialized>\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state: AppInitialStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case SUCCESS_INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\nexport const initializeApp = () => (dispatch: RootDispatchType) => {\n    let promise = dispatch(getAuthUserData())\n    Promise.all([promise])\n        .then(() => {\n            dispatch(successInitialized())\n        })\n}\nexport const successInitialized = () => ({type: SUCCESS_INITIALIZED,} as const)\n\nexport default appReducer\n","import {Action, AnyAction, applyMiddleware, combineReducers, compose, createStore, Dispatch} from \"redux\";\nimport friendsOnlineReducer from \"./friendsOnlineReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk';\nimport {reducer as formReducer} from \"redux-form\";\nimport appReducer from \"./appReducer\";\n\n\nexport const rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsOnline: friendsOnlineReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n})\n\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport type RootDispatchType = Dispatch<Action<string>> & ThunkDispatch<AppStateType, string, AnyAction>;\n\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n// @ts-ignore\n// window.store = store\n","import React from 'react';\n// import preloader from '../../../images/spinner.svg';\nconst preloader = 'https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=790b7611ea276bbbbaa21051bf651344dc6397a74078b299&rid=giphy.gif&ct=g'\n\nconst Preloader = () => {\n    return (\n        <div style={{background: 'white'}}>\n            <img src={preloader} alt={preloader}/>\n        </div>\n    );\n};\n\nexport default Preloader;","import styles from './DialogItem.module.css';\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsType} from \"../../../redux/dialogsReducer\";\n\n\n\ntype DialogItemTypes = {\n    dialogs:DialogsType\n}\nconst DialogItem: React.FC<DialogItemTypes> = (props) => {\n    return (\n        <div className={styles.dialogs__item}>\n            <NavLink className={styles.dialogs__itemLink}\n                     to={\"/dialogs/\" + props.dialogs.id} activeClassName={styles.dialogs__itemLink_active}>\n                <img className={styles.dialogs__itemLink_img} src={props.dialogs.friendsAvatar} alt=\"\"/>\n                <div className={styles.dialogs__item_name}>\n                    {props.dialogs.name}\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import styles from './Message.module.css';\nimport React from \"react\";\nimport {MessagesType} from \"../../../redux/dialogsReducer\";\n\n\ntype MessageTypes = {\n    messages: MessagesType\n}\nconst Message: React.FC<MessageTypes> = (props) => {\n\n    return (\n        <div>\n            <div className={styles.dialogsMessages__item} key={props.messages.id}>\n                {props.messages.message}\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport styles from \"../Dialogs.module.css\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nexport const AddMessageForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form className={styles.dialogFormWrapper} onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.dialogMessages__input}\n                       component={Textarea}\n                       name='newMessageBody'\n                       placeholder={'Введите сообщение'}\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button className={styles.dialogMessages__btn}>Написать</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../redux/store\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nexport type PropsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (newMessageBody: string) => void\n}\nconst Dialogs: React.FC<PropsType> = (props) => {\n    let state = props.dialogsPage\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} dialogs={d}/>);\n    let messagesElements = state.messages.map(m => <Message key={m.id} messages={m}/>);\n\n    let addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialogUsers}>\n                {dialogsElements}\n            </div>\n            <div className={styles.dialogMessages__wrapper}>\n                <h4 className={styles.dir__title}> Dialogs </h4>\n                <div className={styles.dialogMessages}>\n                    {messagesElements}\n                </div>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/reduxStore\";\n\n\ntype mstpType = {\n    isAuth: boolean\n}\nconst mstp = (state: AppStateType): mstpType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: mstpType) => {\n        let {isAuth, ...restProps} = props\n        // if (!isAuth) return <Redirect to={'/login'}/>  // раскомент\n        return <Component {...restProps as T}/>\n    }\n    return connect(mstp)(RedirectComponent)\n}\n\n\n","import React from 'react';\nimport {sendMessageAC} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {ActionsTypes, RootStateType} from \"../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state: RootStateType) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\n    return {\n        sendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageAC(newMessageBody))\n        },\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport styles from './ProfileInfo.module.css';\n\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst ProfileStatus = (props: ProfileStatusType) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [status, setStatus] = useState<string>(props.status)\n\n    useEffect(() => {\n      setStatus(props.status)\n    }, [props.status])\n\n    const activeMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={styles.statusText}>\n            {!editMode &&\n            <span onDoubleClick={activeMode}>\n                    {status || 'no status'}\n                </span>}\n            {editMode &&\n            <input onChange={onStatusChange}\n                   onBlur={deactivateEditMode}\n                   autoFocus={true}\n                   value={status}\n            />}\n        </div>\n    )\n}\n\n\nexport default ProfileStatus","import React from \"react\";\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\n// import owlEyes from '../../../images/owl_eyes.jpeg';\n\n\ntype PhotosType = {\n    photos: {\n        small: string\n        large: string\n    }\n}\ntype ProfileInfoType = {\n    profile: PhotosType\n    status: string\n    updateStatus: (status: string) => void\n}\nconst ProfileInfo = (props: ProfileInfoType) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n                <img className={styles.profileImg}\n                     src={'http://green-forest36.ru/wp-content/uploads/2020/04/2-1.jpg'}\n                    // src={owlEyes}\n                     alt='owl'/>\n            </div>\n            <div className={styles.avatar}>\n                {props.profile.photos.large &&\n                <img className={styles.avatarImg}\n                     src={props.profile.photos.large} alt=\"avatar\"/>}\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport styles from './Post.module.css';\n// import avatar_to_all from './../../../../images/avatar_to_all.png'\nimport {PostDataType} from \"../../../../redux/store\";\nconst avatar_to_all = 'https://images.pexels.com/photos/1564839/pexels-photo-1564839.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n\n\ntype PostType = {\n    post: PostDataType\n}\nconst Post: React.FC<PostType> = (props) => {\n    return (\n        <div className={styles.postsItem}>\n            <div className={styles.postsItem__inner}>\n                <img className={styles.postsItem__avatar}\n                     src={avatar_to_all}\n                     alt=\"avatar_to_all\"/>\n                {props.post.message}\n            </div>\n            <div className={styles.postsItem__activity}>\n                <span className={styles.postsItem__like}>{props.post.likeCount} Нравится</span>\n                <span className={styles.postsItem__send}>Написать сообщение</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport styles from '../Profile.module.css'\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nconst AddPostForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form className={styles.profileFormWrapper} onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.profileMessages__input}\n                       component={Textarea}\n                       name='newPostText'\n                       placeholder={'Введите сообщение'}\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button className={styles.profileMessages__btn}>Написать</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'profileAddPostForm'})(AddPostForm)\n","import React from \"react\";\nimport styles from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {ProfileUserType} from \"../../../redux/profileReducer\";\nimport AddPostForm from \"../AddPostForm/AddPostForm\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n    addPost: (newPostText: string) => void\n}\n\nconst MyPosts = React.memo((props: PropsType) => {\n    let state = props.profilePage\n    let postElements = state.postData.map(p => <Post key={p.id} post={p}/>);\n\n    let onAddPost = (values: any) => {\n        props.addPost(values.newPostText)\n        values.newPostText = ''\n    }\n\n    return (\n        <div>\n            <div>\n                <AddPostForm onSubmit={onAddPost}/>\n            </div>\n            <div className={styles.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n})\n\n\nexport default MyPosts;\n\n\n// class MyPosts extends React.PureComponent<PropsType> {\n//\n//     // shouldComponentUpdate(nextProps: Readonly<PropsType>, nextState: Readonly<{}>): boolean {\n//     //     return this.props === nextProps || nextState === this.state\n//     // }\n//\n//     render() {\n//         console.log('sd');\n//         let state = this.props.profilePage\n//         let postElements = state.postData.map(p => <Post key={p.id} post={p}/>);\n//         // let postElements = this.props.profilePage.postData.map(p => <Post post={p} key={p.id}/>)\n//\n//         let onAddPost = (values: any) => {\n//             this.props.addPost(values.newPostText)\n//             values.newPostText = ''\n//         }\n//\n//         return (\n//             <div>\n//                 <div>\n//                     <AddPostForm onSubmit={onAddPost}/>\n//                 </div>\n//                 <div className={styles.posts}>\n//                     {postElements}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\n","import React from \"react\";\nimport {ActionsTypes, RootStateType} from \"../../../redux/store\";\nimport {addPostAC, ProfileUserType} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n}\n\nlet mapStateToProps = (state: RootStateType) => {\n    return {\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostAC(newPostText))\n        },\n    }\n}\n\nconst MyPostsContainer: React.FC<PropsType> = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileUserType} from \"../../redux/profileReducer\";\n\n\ntype PropsType = {\n    profilePage: ProfileUserType\n    getUserProfile: (userId: number) => void\n    // getStatus: () => void\n    updateStatus: (status: string) => void\n}\nconst Profile: React.FC<PropsType> = ({profilePage, updateStatus}) => {\n    return (\n        <div>\n            <ProfileInfo profile={profilePage.profile}\n                         status={profilePage.status}\n                         updateStatus={updateStatus}\n            />\n            <MyPostsContainer profilePage={profilePage}/>\n        </div>\n    )\n}\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport {getStatus, getUserProfile, ProfileUserType, setStatus, updateStatus} from \"../../redux/profileReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {compose} from \"redux\";\n\n\ntype PathParamsType = {\n    userId: string\n}\ntype MapStatePropsType = {\n    profilePage: ProfileUserType\n    authorizedUserId: number | null\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: number) => void\n    // getStatus: () => void\n    updateStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst ProfileContainer = (props: PropsType) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        let userId = +props.match.params.userId;\n        if (!userId) {\n            userId = props.authorizedUserId || 0;\n            // if (!userId) {                               // раскомент\n            //     props.history.push('/login')\n            // }\n        }\n        dispatch(getUserProfile(userId))\n        dispatch(setStatus(userId))\n    }, [])\n    return <Profile getUserProfile={props.getUserProfile}\n                    // getStatus={props.getStatus}\n                    updateStatus={props.updateStatus}\n                    profilePage={props.profilePage}/>\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profilePage: state.profilePage,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\nexport default compose<React.ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n        getUserProfile,\n        // getStatus,\n        updateStatus\n    }),\n    withRouter,\n)(ProfileContainer)\n\n","import React, {useState} from 'react';\nimport styles from \"../../Users/Users.module.css\";\n\n\ntype UsersType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize: number\n}\n\nconst Paginator = (props: UsersType): JSX.Element => {\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\n    const rightPortionPageNumber = portionNumber * props.portionSize\n\n    return (\n        <div className={styles.usersPagination}>\n            {portionNumber > 1 &&\n            <button className={styles.pageBtn}\n                    onClick={() => {\n                        setPortionNumber(portionNumber - 1)\n                    }}> &larr; </button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <span key={p}\n                                 className={props.currentPage === p ? styles.selectedPage : styles.pages}\n                                 onClick={() => props.onPageChanged(p)}\n                    >{p}</span>\n                })}\n            {portionCount > portionNumber &&\n            <button className={styles.pageBtn}\n                    onClick={() => {\n                        setPortionNumber(portionNumber + 1)\n                    }}> &rarr; </button>}\n        </div>\n    )\n};\n\nexport default Paginator;\n\n\n","import React from 'react';\nimport styles from \"./Users.module.css\";\n// import userPhoto from \"./avatar_to_all.png\";\nimport {UserType} from \"../../redux/usersReducer\";\nimport {NavLink} from 'react-router-dom';\nconst userPhoto = 'https://images.pexels.com/photos/1564839/pexels-photo-1564839.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n\n\ntype UserPropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\nconst User = (props: UserPropsType): JSX.Element => {\n\n    return (\n        <div className={styles.usersItems}>\n            <NavLink to={'/profile/' + props.user.id}>\n                <img className={styles.usersPhoto} alt={'user_photo'}\n                     src={props.user.photos.small !== null ? props.user.photos.small : userPhoto}/>\n            </NavLink>\n            <div>\n                {props.user.followed\n                    ? <button disabled={props.followingInProgress.includes(props.user.id)} onClick={() => {\n                        props.unfollow(props.user.id)\n                    }}>Unfollow</button>\n                    : <button disabled={props.followingInProgress.includes(props.user.id)} onClick={() => {\n                        props.follow(props.user.id)\n                    }}>Follow</button>}\n            </div>\n            <span>\n                    <span>\n                        <div>{props.user.name}</div>\n                        <div>{props.user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"props.location.country\"}</div>\n                        <div>{\"props.location.city\"}</div>\n                    </span>\n                </span>\n        </div>\n    )\n};\n\nexport default User;","import React, {ReactElement} from 'react';\nimport styles from \"./Users.module.css\";\nimport {UserType} from \"../../redux/usersReducer\";\nimport Paginator from \"../Common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\ntype UsersType = {\n    usersPage: Array<UserType>\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    isFetching: boolean\n    followingInProgress: Array<number>\n    portionSize: number\n}\n\n// component return jsx or null\n\n// null | string => Nullable<string>\n\ntype Nullable<T> = T | null\n\nconst Users = (props: UsersType): Nullable<ReactElement> => {\n\n    // early return =>\n\n    // const func =(param) => {\n    //     if (!param) {\n    //         return 0\n    //     }\n    //\n    //     return 1\n    // }\n    //\n    // if (2) {\n    //\n    // }\n    //\n    // if (1) {\n    //     return null\n    // }\n\n    return (\n        <div className={styles.usersInner}>\n            <Paginator totalItemsCount={props.totalUsersCount}\n                       pageSize={props.pageSize}\n                       currentPage={props.currentPage}\n                       onPageChanged={props.onPageChanged}\n                       portionSize={props.portionSize}\n            />\n\n            {props.usersPage.map(u => <User key={u.id}\n                                            user={u}\n                                            followingInProgress={props.followingInProgress}\n                                            follow={props.follow}\n                                            unfollow={props.unfollow}\n            />)}\n        </div>\n    );\n};\n\nexport default Users;","import {AppStateType} from \"./reduxStore\";\nimport {createSelector} from \"reselect\";\nimport {UserType} from \"./usersReducer\";\n\nconst getUsersPage = (state: AppStateType) => {\n    return state.usersPage.users\n}\nexport const getUsersSelector = createSelector(getUsersPage, (users: UserType[]) => {\n    return users.filter(u => true)\n})\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\nexport const getPortionSize = (state: AppStateType) => {\n    return state.usersPage.portionSize\n}\n\n\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, unfollow, getUsers, onPageChanged, setCurrentPage, toggleFollowingProgress, toggleIsFetching, UserType\n} from \"../../redux/usersReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize, getPortionSize,\n    getTotalUsersCount,\n    getUsersSelector,\n} from \"../../redux/usersSelectors\";\n\n\ntype MapStatePropsType = {\n    usersPage: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n    portionSize:number\n}\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setCurrentPage: (pageNumber: number) => void\n    onPageChanged: (pageNumber: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\n\nclass UsersContainer extends React.Component<UsersPropsType, UsersPropsType> {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            {/*<Users user={this.props.user} usersPage={} totalUsersCount={} pageSize={} currentPage={} onPageChanged={} follow={} unfollow={} isFetching={} followingInProgress={}*/}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   usersPage={this.props.usersPage}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   isFetching={this.props.isFetching}\n                   followingInProgress={this.props.followingInProgress}\n                   portionSize={this.props.portionSize}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        usersPage: getUsersSelector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n        portionSize: getPortionSize(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n            follow, unfollow, setCurrentPage, toggleFollowingProgress,\n            getUsers, onPageChanged, toggleIsFetching\n        }\n    ))(UsersContainer)\n\n","import React, {ComponentType, Suspense} from 'react';\nimport styles from './App.module.css';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport Navbar from \"../Navbar/Navbar\";\nimport News from \"../News/News\";\nimport Music from \"../Music/Music\";\nimport Photo from \"../Photo/Photo\";\nimport Video from \"../Video/Video\";\nimport Settings from \"../Settings/Settings\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport Login from \"../Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {AppStateType, store} from \"../../redux/reduxStore\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"../../redux/appReducer\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport DialogsContainer from \"../Dialogs/DialogsContainer\";\nimport ProfileContainer from \"../Profile/ProfileContainer\";\nimport UsersContainer from \"../Users/UsersContainer\";\n// const DialogsContainer = React.lazy(() => import('../Dialogs/DialogsContainer'));\n// const ProfileContainer = React.lazy(() => import('../Profile/ProfileContainer'));\n// const UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\n\n\ntype MapDispatchType = {\n    initializeApp: () => void\n}\n\ninterface PropsType extends MapDispatchType {\n    initialized: boolean\n}\n\ninterface StateType {\n}\n\nclass App extends React.Component<PropsType, StateType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={styles.container}>\n                <div className={styles.app__wrapper}>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className={styles.content__wrapper}>\n                        <div className={styles.content__inner}>\n                            <Suspense fallback={<Preloader/>}>\n                                <Switch>\n                                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\n                                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\n                                    <Route path={'/users'} render={() => <UsersContainer/>}/>\n                                    <Route path={'/news'} render={() => <News/>}/>\n                                    <Route path={'/music'} render={() => <Music/>}/>\n                                    <Route path={'/photo'} render={() => <Photo/>}/>\n                                    <Route path={'/video'} render={() => <Video/>}/>\n                                    <Route path={'/settings'} render={() => <Settings/>}/>\n                                    <Route path={'/login'} render={() => <Login/>}/>\n                                </Switch>\n                            </Suspense>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mstp = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<ComponentType>(\n    withRouter,\n    connect(mstp, {initializeApp}))(App)\n\nlet SocialApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default SocialApp\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialApp from \"./components/App/App\";\n\n\nReactDOM.render(\n   <SocialApp/>, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__zKx4R\",\"error\":\"FormControls_error__frz7K\",\"inputWindow\":\"FormControls_inputWindow__2O6cV\",\"errorMessage\":\"FormControls_errorMessage__3coxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsItem\":\"Post_postsItem__1DHL5\",\"postsItem__inner\":\"Post_postsItem__inner__1-7QK\",\"postsItem__avatar\":\"Post_postsItem__avatar__3N6Bd\",\"postsItem__messages\":\"Post_postsItem__messages__1V62h\",\"postsItem__activity\":\"Post_postsItem__activity__1G8T2\",\"postsItem__like\":\"Post_postsItem__like__3sh5I\",\"postsItem__send\":\"Post_postsItem__send__QVbcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"ProfileInfo_profileImg__3mXT7\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"avatarImg\":\"ProfileInfo_avatarImg__2izmI\",\"myPosts\":\"ProfileInfo_myPosts__1no8m\",\"myPosts__input\":\"ProfileInfo_myPosts__input__3tJm9\",\"myPosts__button\":\"ProfileInfo_myPosts__button__19Gsk\",\"statusText\":\"ProfileInfo_statusText__1KWIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__item\":\"DialogItem_dialogs__item__1Cdio\",\"dialogs__itemLink_img\":\"DialogItem_dialogs__itemLink_img__cYh4p\",\"dialogs__itemLink\":\"DialogItem_dialogs__itemLink__tlNq4\",\"dialogs__itemLink_active\":\"DialogItem_dialogs__itemLink_active__2OIAv\",\"dialogs__item_name\":\"DialogItem_dialogs__item_name__3uvlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"app__wrapper\":\"App_app__wrapper__1z8PO\",\"content__wrapper\":\"App_content__wrapper__32aMC\",\"content__inner\":\"App_content__inner__37WXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fOnline__inner\":\"FriendsAvatar_fOnline__inner__3mbGn\",\"fOnline__name\":\"FriendsAvatar_fOnline__name__2sdlO\",\"fOnline__ava\":\"FriendsAvatar_fOnline__ava__22q3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__20PK_\",\"loginBtn\":\"Login_loginBtn__JiEkY\",\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileFormWrapper\":\"Profile_profileFormWrapper__1TJsL\",\"profileMessages__input\":\"Profile_profileMessages__input__1M3bu\",\"profileMessages__btn\":\"Profile_profileMessages__btn__1SIl3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fOnline\":\"FriendsOnline_fOnline__3EvEn\",\"fOnline__title\":\"FriendsOnline_fOnline__title__3WIS0\"};"],"sourceRoot":""}