{"version":3,"sources":["utils/validators.ts","components/Common/FormControls/FormControls.tsx","components/Common/FormControls/FormControls.module.css","hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["required","value","maxLengthCreator","maxLength","length","Textarea","props","input","meta","restProps","showError","touched","error","className","styles","formControl","errorMessage","module","exports","mstp","state","isAuth","auth","withAuthRedirect","Component","connect","DialogItem","dialogs__item","dialogs__itemLink","to","dialogs","id","activeClassName","dialogs__itemLink_active","dialogs__itemLink_img","src","friendsAvatar","alt","dialogs__item_name","name","Message","dialogsMessages__item","messages","message","maxLength50","reduxForm","form","dialogFormWrapper","onSubmit","handleSubmit","Field","dialogMessages__input","component","placeholder","validate","dialogMessages__btn","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogUsers","dialogMessages__wrapper","dir__title","dialogMessages","values","sendMessage","newMessageBody","compose","dispatch","sendMessageAC"],"mappings":"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","file":"static/js/5.0dfff36b.chunk.js","sourcesContent":["export const required = (value: string) => {\n    if (value) return undefined\n\n    return 'Обязательно заполните';\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Не больше ${maxLength} символов`\n\n    return undefined\n}\n\n\n\n\n\n\n","import React from 'react';\nimport styles from './FormControls.module.css';\nimport {Field, WrappedFieldProps} from \"redux-form\";\n\n\nexport const Textarea = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\nexport const Input = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea className={styles.inputWindow} {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\nexport const createField = (placeholder: any, name: any, validators: any, component: any, props: any, text: string = '') => {\n    return <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__zKx4R\",\"error\":\"FormControls_error__frz7K\",\"inputWindow\":\"FormControls_inputWindow__2O6cV\",\"errorMessage\":\"FormControls_errorMessage__3coxl\"};","import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/reduxStore\";\n\n\ntype mstpType = {\n    isAuth: boolean\n}\nconst mstp = (state: AppStateType): mstpType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: mstpType) => {\n        let {isAuth, ...restProps} = props\n        // if (!isAuth) return <Redirect to={'/login'}/>  // раскомент\n        return <Component {...restProps as T}/>\n    }\n    return connect(mstp)(RedirectComponent)\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dir__title\":\"Dialogs_dir__title__euGaD\",\"dialogUsers\":\"Dialogs_dialogUsers__3n8lx\",\"dialogMessages__wrapper\":\"Dialogs_dialogMessages__wrapper__3yGDs\",\"dialogMessages\":\"Dialogs_dialogMessages__3ag9d\",\"dialogFormWrapper\":\"Dialogs_dialogFormWrapper__16edN\",\"dialogMessages__input\":\"Dialogs_dialogMessages__input__1ACmk\",\"dialogMessages__btn\":\"Dialogs_dialogMessages__btn__QhydC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__item\":\"DialogItem_dialogs__item__1Cdio\",\"dialogs__itemLink_img\":\"DialogItem_dialogs__itemLink_img__cYh4p\",\"dialogs__itemLink\":\"DialogItem_dialogs__itemLink__tlNq4\",\"dialogs__itemLink_active\":\"DialogItem_dialogs__itemLink_active__2OIAv\",\"dialogs__item_name\":\"DialogItem_dialogs__item_name__3uvlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages__item\":\"Message_dialogsMessages__item__fepUr\"};","import styles from './DialogItem.module.css';\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsType} from \"../../../redux/dialogsReducer\";\n\n\n\ntype DialogItemTypes = {\n    dialogs:DialogsType\n}\nconst DialogItem: React.FC<DialogItemTypes> = (props) => {\n    return (\n        <div className={styles.dialogs__item}>\n            <NavLink className={styles.dialogs__itemLink}\n                     to={\"/dialogs/\" + props.dialogs.id} activeClassName={styles.dialogs__itemLink_active}>\n                <img className={styles.dialogs__itemLink_img} src={props.dialogs.friendsAvatar} alt=\"\"/>\n                <div className={styles.dialogs__item_name}>\n                    {props.dialogs.name}\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import styles from './Message.module.css';\nimport React from \"react\";\nimport {MessagesType} from \"../../../redux/dialogsReducer\";\n\n\ntype MessageTypes = {\n    messages: MessagesType\n}\nconst Message: React.FC<MessageTypes> = (props) => {\n\n    return (\n        <div>\n            <div className={styles.dialogsMessages__item} key={props.messages.id}>\n                {props.messages.message}\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport styles from \"../Dialogs.module.css\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50)\nexport const AddMessageForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form className={styles.dialogFormWrapper} onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={styles.dialogMessages__input}\n                       component={Textarea}\n                       name='newMessageBody'\n                       placeholder={'Введите сообщение'}\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button className={styles.dialogMessages__btn}>Написать</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPageType} from \"../../redux/store\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nexport type PropsType = {\n    dialogsPage: DialogsPageType\n    sendMessage: (newMessageBody: string) => void\n}\nconst Dialogs: React.FC<PropsType> = (props) => {\n    let state = props.dialogsPage\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} dialogs={d}/>);\n    let messagesElements = state.messages.map(m => <Message key={m.id} messages={m}/>);\n\n    let addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n        values.newMessageBody = ''\n    }\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialogUsers}>\n                {dialogsElements}\n            </div>\n            <div className={styles.dialogMessages__wrapper}>\n                <h4 className={styles.dir__title}> Dialogs </h4>\n                <div className={styles.dialogMessages}>\n                    {messagesElements}\n                </div>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageAC} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {ActionsTypes, RootStateType} from \"../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state: RootStateType) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch: (action: ActionsTypes) => void) => {\n    return {\n        sendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageAC(newMessageBody))\n        },\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}