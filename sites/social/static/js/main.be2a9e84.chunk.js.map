{"version":3,"sources":["redux/dialogsReducer.ts","redux/usersReducer.ts","api/api.ts","components/Header/Header.module.css","components/Navbar/FriendsOnline/FriendsAvatar/FriendsAvatar.tsx","components/Navbar/FriendsOnline/FriendsOnline.tsx","components/Navbar/FriendsOnline/FriendsOnlineContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Photo/Photo.tsx","components/Video/Video.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/friendsOnlineReducer.ts","redux/appReducer.tsx","redux/reduxStore.ts","components/App/App.tsx","index.tsx","components/Common/FormControls/FormControls.module.css","components/App/App.module.css","components/Navbar/FriendsOnline/FriendsAvatar/FriendsAvatar.module.css","components/Login/Login.module.css","components/Common/FormControls/FormControls.tsx","utils/validators.ts","components/Common/Preloader/Preloader.tsx","components/Navbar/Navbar.module.css","components/Navbar/FriendsOnline/FriendsOnline.module.css","redux/profileReducer.ts"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","friendsAvatar","messages","message","sendMessageAC","newMessageBody","type","dialogsReducer","state","action","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","ON_PAGE_CHANGED","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","pageNumber","isFetching","followingInProgress","portionSize","followSuccess","userId","unfollowSuccess","setCurrentPage","onPageChanged","toggleIsFetching","toggleFollowingProgress","getUsers","page","dispatch","a","usersApi","data","items","totalCount","follow","resultCode","unfollow","usersReducer","map","u","followed","filter","instance","axios","create","withCredentials","baseURL","headers","get","then","response","delete","post","getProfile","console","warn","profileApi","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","module","exports","FriendsAvatar","props","className","styles","fOnline__inner","fOnline__name","fOnline__ava","src","ava","alt","FriendsOnline","friendsOnline","sidebar","f","fOnline","fOnline__title","FriendsOnlineContainer","connect","Navbar","navbar","navbarItem","navbarItem__link","activeClassName","active","to","News","Music","Photo","Video","Settings","Header","header","header__inner","href","headerLogo","headerTitle","loginBlock","isAuth","loginLogoutBtn","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","loginFormWrapper","Field","aria-label","placeholder","component","Input","validate","required","error","formSummaryError","loginBtn","length","stopSubmit","_error","formData","friendsOnlineReducer","SUCCESS_INITIALIZED","initialized","successInitialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","container","app__wrapper","content__wrapper","content__inner","fallback","Preloader","path","render","AppContainer","withRouter","promise","Promise","all","SocialApp","basename","ReactDOM","document","getElementById","Textarea","input","meta","restProps","showError","touched","formControl","errorMessage","inputWindow","value","maxLengthCreator","maxLength","preloader","style","background","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_UPDATE_STATUS","postData","likeCount","profile","addPostAC","newPostText","setStatus","setUpdateStatus","getUserProfile","newPost","p","postId"],"mappings":"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","file":"static/js/main.be2a9e84.chunk.js","sourcesContent":["// import filin from \"../images/friends_avatars/filin.jpeg\";\n// import sipuha from \"../images/friends_avatars/sipuha.jpeg\";\n// import rybniyFilin from \"../images/friends_avatars/rybniy-filin.jpeg\";\nconst tom = 'https://images.pexels.com/photos/3622695/pexels-photo-3622695.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\nconst alex = 'https://images.pexels.com/photos/3732453/pexels-photo-3732453.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\nconst jane = 'https://images.pexels.com/photos/6474755/pexels-photo-6474755.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\n\nconst SEND_MESSAGE = 'SEND-MESSAGE'\n\nexport type MessagesType = {\n    id: number\n    message: string\n}\nexport type DialogsType = {\n    id: number\n    name: string\n    friendsAvatar: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Tom', friendsAvatar: tom},\n        {id: 2, name: 'Alex', friendsAvatar: alex},\n        {id: 3, name: 'Jane', friendsAvatar: jane}\n    ] as Array<DialogsType>,\n    messages: [\n        {id: 1, message: 'Hello'},\n        {id: 2, message: 'Hi'},\n        {id: 3, message: 'Bye'},\n    ] as Array<MessagesType>,\n}\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\n\n    switch (action.type) {\n        case SEND_MESSAGE:\n            return {\n                ...state,\n                messages: [{id: 6, message: action.newMessageBody}, ...state.messages]\n            };\n    }\n    return state\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof sendMessageAC>\n\nexport const sendMessageAC = (newMessageBody: string) => {\n    return {\n        type: SEND_MESSAGE,\n        newMessageBody\n    } as const\n}\n\nexport default dialogsReducer","import {usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst ON_PAGE_CHANGED = 'ON_PAGE_CHANGED'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\nexport type LocationType = {\n    city: string\n    country: string\n}\nexport type UserType = {\n    id: number\n    photos: {\n        small: string\n        large: string\n    }\n    followed: boolean\n    name: string\n    status: string\n    location: LocationType\n}\nexport type InitialStateType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    pageNumber: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n    portionSize: number\n}\n\nlet initialState: InitialStateType = {\n    users: [],\n    pageSize: 20,\n    totalUsersCount: 0,\n    currentPage: 1,\n    pageNumber: 1,\n    isFetching: true,\n    followingInProgress: [],\n    portionSize: 10,\n}\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        case ON_PAGE_CHANGED: {\n            return {...state, pageNumber: action.pageNumber}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter((id: number) => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof followSuccess> | ReturnType<typeof unfollowSuccess>\n    | ReturnType<typeof setUsers> | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount> | ReturnType<typeof onPageChanged>\n    | ReturnType<typeof toggleIsFetching> | ReturnType<typeof toggleFollowingProgress>\n\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\n    type: SET_TOTAL_USERS_COUNT, totalUsersCount\n} as const)\nexport const onPageChanged = (pageNumber: number) => ({type: ON_PAGE_CHANGED, pageNumber} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n} as const)\n\nexport const getUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    let data = await usersApi.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let response = await usersApi.follow(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(followSuccess(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let response = await usersApi.unfollow(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(unfollowSuccess(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\n// refactor ->\n// const followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: (userId: number) => void, ac: (userId: number) => void) => {\n//     dispatch(toggleFollowingProgress(true, userId))\n//     let response = await apiMethod(userId)\n//     if (response.data.resultCode === 0) {\n//         dispatch(ac(userId))\n//     }\n//     dispatch(toggleFollowingProgress(false, userId))\n// }\n//\n// export const follow = (userId: number) => async (dispatch: Dispatch) => {\n//     followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess)\n// }\n// export const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n//     followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess)\n// }\n\nexport default usersReducer;","import axios from \"axios\";\nimport {ProfileUserType} from \"../redux/profileReducer\";\nimport {AuthPropsType} from \"../redux/authReducer\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': '411482a7-ac02-48c2-a201-383524308513'},\n})\n\nexport const usersApi = {\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`\n        )\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`\n        )\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please profileApi object')\n        return profileApi.getProfile(userId)\n    },\n}\n\n// ====\n\nexport const profileApi = {\n    getProfile(userId: number) {\n        return instance.get<ProfileUserType>(`profile/${userId}`)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status/`, {status})\n    },\n}\n\n// ====\n\nexport const authApi = {\n    me() {\n        return instance.get<AuthPropsType>(`auth/me`)\n    },\n    login(email: string, password: string, rememberMe: boolean) {\n        return instance.post<AuthPropsType>(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete<AuthPropsType>(`auth/login`)\n    },\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"header__inner\":\"Header_header__inner__26ef8\",\"headerLogo\":\"Header_headerLogo__pHUY0\",\"headerTitle\":\"Header_headerTitle__3Y2pE\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"loginLogoutBtn\":\"Header_loginLogoutBtn__31tEv\"};","import React from 'react';\nimport styles from './FriendsAvatar.module.css';\n\n\ntype PropsType = {\n    id:number\n    name: string\n    ava:string\n}\nconst FriendsAvatar:React.FC<PropsType> = (props) => {\n    return (\n        <div className={styles.fOnline__inner}>\n            <div className={styles.fOnline__name}>{props.name}</div>\n            <img className={styles.fOnline__ava} src={props.ava} alt=\"\"/>\n        </div>\n    );\n};\n\nexport default FriendsAvatar;","import React from 'react';\nimport styles from './FriendsOnline.module.css';\nimport {FriendsOnlineType} from \"../../../redux/store\";\nimport FriendsAvatar from \"./FriendsAvatar/FriendsAvatar\";\n\n\ntype PropsType ={\n    friendsOnline: FriendsOnlineType\n}\nconst FriendsOnline:React.FC<PropsType> = (props) => {\nlet state = props.friendsOnline\n    let friendsAvatar = state.sidebar.map(f => <FriendsAvatar\n        key={f.id}\n        name={f.name}\n        ava={f.ava}\n        id={f.id}\n    />);\n    return (\n        <div className={styles.fOnline}>\n            <h5 className={styles.fOnline__title}>Друзья онлайн</h5>\n            {friendsAvatar}\n        </div>\n    );\n};\n\nexport default FriendsOnline;\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsOnline from \"./FriendsOnline\";\nimport {RootStateType} from \"../../../redux/store\";\n\n\nlet mapStateToProps = (state:RootStateType) => {\n    return {\n        friendsOnline: state.friendsOnline\n    }\n}\n\nconst FriendsOnlineContainer: React.FC = connect(mapStateToProps)(FriendsOnline)\n\nexport default FriendsOnlineContainer;\n\n","import styles from './Navbar.module.css';\nimport React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsOnlineContainer from \"./FriendsOnline/FriendsOnlineContainer\";\n\n\nconst Navbar:React.FC = () => {\n\n    return (\n        <nav className={styles.navbar}>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/profile\"}>\n                    Профиль</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/dialogs\"} >\n                    Сообщения</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/users\"} >\n                    Друзья</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/news\"} >\n                    Новости</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/music\"} >\n                    Музыка</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/photo\"} >\n                    Фото</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/video\"} >\n                    Видео</NavLink>\n            </div>\n            <div className={styles.navbarItem}>\n                <NavLink className={styles.navbarItem__link} activeClassName={styles.active}\n                   to={\"/settings\"} >\n                    Настройки</NavLink>\n            </div>\n            <div className={styles.friendsOnline}>\n\n                <FriendsOnlineContainer />\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport styles from './News.module.css';\n\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport styles from './Music.module.css';\n\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport styles from './Photo.module.css';\n\n\nconst Photo = () => {\n    return (\n        <div>\n            Photo\n        </div>\n    )\n}\n\nexport default Photo;","import React from \"react\";\nimport styles from './Video.module.css';\n\n\nconst Video = () => {\n    return (\n        <div>\n            Video\n        </div>\n    )\n}\n\nexport default Video;","import React from \"react\";\nimport styles from './Settings.module.css';\n\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport styles from './Header.module.css'\n\n\ntype PropsType = {\n    isAuth: boolean\n    login: string | null\n    logout: () => void\n}\nconst Header: React.FC<PropsType> = (props) => {\n    return (\n        <header className={styles.header}>\n            <a className={styles.header__inner} href={\"/profile\"}>\n                <img className={styles.headerLogo} src='https://img.icons8.com/ios/452/owl.png'\n                     alt=\"logo\"/>\n            </a>\n            <a className={styles.header__inner} href={\"/profile\"}>\n                <h1 className={styles.headerTitle}>owlbook.com</h1>\n            </a>\n            <div className={styles.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} <button className={styles.loginLogoutBtn} onClick={props.logout}>Выйти</button></div>\n                    : <NavLink className={styles.loginLogoutBtn} to={'/login'}>войти</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import {Dispatch} from \"redux\";\nimport {authApi} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {RootDispatchType} from \"./reduxStore\";\n\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\n\nexport type AuthPropsType = {\n    resultCode: number\n    messages: Array<string>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\nexport type AuthType = {\n    userId: number | null\n    email: string | null\n    login: string | null\n    isAuth: boolean\n}\nexport type InitialStateType = AuthType\n\nlet initialState = {\n    userId: null as number | null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport type ActionsTypes = ReturnType<typeof setAuthUserData>\n\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => {\n    return {\n        type: SET_USER_DATA,\n        payload: {userId, email, login, isAuth}\n    } as const\n}\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\n    let response = await authApi.me()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: RootDispatchType) => {\n    let response = await authApi.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        await dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Ошибка ввода'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch: Dispatch) => {\n    let response = await authApi.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer\n\n\n\n\n\n\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\n\ntype OwnProps = {}\ntype MapStateToPropsType = {\n    isAuth: boolean\n    login: string | null\n}\ntype MapDispatchType = {\n    logout: () => void\n}\ntype OwnPropsType = MapStateToPropsType & MapDispatchType\n\nclass HeaderContainer extends React.Component<OwnPropsType> {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\nexport default connect<MapStateToPropsType, MapDispatchType, OwnProps, AppStateType>(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../Common/FormControls/FormControls\";\nimport styles from './Login.module.css';\nimport {required} from \"../../utils/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\n\ntype LoginPropsType = {\n    isAuth: boolean\n    login: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype FormDataType = {\n    email: string,\n    password: string,\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={styles.loginFormWrapper}>\n            <div>\n                <Field aria-label='Email'\n                       placeholder='Email'\n                       type='Email'\n                       name='email'\n                       component={Input}\n                       validate={required}/>\n            </div>\n            <div>\n                <Field aria-label='Password'\n                       placeholder='Пароль'\n                       type='password'\n                       name='password'\n                       component={Input}\n                       validate={required}/>\n            </div>\n            <div>\n                <Field type='checkbox'\n                       name='rememberMe'\n                       component={'input'}/> Запомнить\n            </div>\n            {props.error && <div className={styles.formSummaryError}>{props.error}</div>}\n            <div>\n                <button className={styles.loginBtn}>Login</button>\n            </div>\n        </form>\n    );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\n\n\nconst Login = (props: LoginPropsType) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    // if (props.isAuth) {\n    //     return <Redirect to={'/profile'}/>\n    // }\n\n    return (\n        <div>\n            <h1>Логин</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n};\nconst mstp = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mstp, {login})(Login);\n","// import ava1 from \"../images/ava_1.png\";\n// import ava2 from \"../images/ava_2.png\";\n// import ava3 from \"../images/ava_3.png\";\nconst ava = 'https://cdn-icons-png.flaticon.com/512/12/12426.png'\n\nexport type SidebarType = {\n    id: number\n    name: string\n    ava: string\n}\nexport type InitialStateType = {\n    sidebar: Array<SidebarType>\n}\nlet initialState: InitialStateType = {\n    sidebar: [\n        {id: 1, name: 'Неясыть', ava: ava},\n        {id: 2, name: 'Филин', ava: ava},\n        {id: 3, name: 'Полярная сова', ava: ava}\n    ]\n}\nconst friendsOnlineReducer = (state: InitialStateType = initialState) => {\n    return state\n}\n\nexport default friendsOnlineReducer","import {getAuthUserData} from \"./authReducer\";\nimport {RootDispatchType} from \"./reduxStore\";\n\nconst SUCCESS_INITIALIZED = 'SUCCESS_INITIALIZED';\n\nexport type AppInitialStateType = {\n    initialized: boolean\n}\nexport type ActionsTypes = ReturnType<typeof successInitialized>\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state: AppInitialStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case SUCCESS_INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\nexport const initializeApp = () => (dispatch: RootDispatchType) => {\n    let promise = dispatch(getAuthUserData())\n    Promise.all([promise])\n        .then(() => {\n            dispatch(successInitialized())\n        })\n}\nexport const successInitialized = () => ({type: SUCCESS_INITIALIZED,} as const)\n\nexport default appReducer\n","import {Action, AnyAction, applyMiddleware, combineReducers, compose, createStore, Dispatch} from \"redux\";\nimport friendsOnlineReducer from \"./friendsOnlineReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk';\nimport {reducer as formReducer} from \"redux-form\";\nimport appReducer from \"./appReducer\";\n\n\nexport const rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsOnline: friendsOnlineReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n})\n\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport type RootDispatchType = Dispatch<Action<string>> & ThunkDispatch<AppStateType, string, AnyAction>;\n\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n// @ts-ignore\n// window.store = store\n","import React, {ComponentType, Suspense} from 'react';\nimport styles from './App.module.css';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport Navbar from \"../Navbar/Navbar\";\nimport News from \"../News/News\";\nimport Music from \"../Music/Music\";\nimport Photo from \"../Photo/Photo\";\nimport Video from \"../Video/Video\";\nimport Settings from \"../Settings/Settings\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport Login from \"../Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {AppStateType, store} from \"../../redux/reduxStore\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"../../redux/appReducer\";\nimport Preloader from \"../Common/Preloader/Preloader\";\n// import ProfileContainer from \"../Profile/ProfileContainer\";\n// import DialogsContainer from \"../Dialogs/DialogsContainer\";\n// import UsersContainer from \"../Users/UsersContainer\";\nconst ProfileContainer = React.lazy(() => import('../Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('../Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\n\n\ntype MapDispatchType = {\n    initializeApp: () => void\n}\n\ninterface PropsType extends MapDispatchType {\n    initialized: boolean\n}\n\ninterface StateType {\n}\n\nclass App extends React.Component<PropsType, StateType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={styles.container}>\n                <div className={styles.app__wrapper}>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className={styles.content__wrapper}>\n                        <div className={styles.content__inner}>\n                            <Suspense fallback={<Preloader/>}>\n                                <Switch>\n                                    <Route path={'/profile/:userId?'} component={ProfileContainer}/>\n                                    <Route path={'/dialogs'} component={DialogsContainer}/>\n                                    <Route path={'/users'} component={UsersContainer}/>\n                                    <Route path={'/news'} render={() => <News/>}/>\n                                    <Route path={'/music'} render={() => <Music/>}/>\n                                    <Route path={'/photo'} render={() => <Photo/>}/>\n                                    <Route path={'/video'} render={() => <Video/>}/>\n                                    <Route path={'/settings'} render={() => <Settings/>}/>\n                                    <Route path={'/login'} render={() => <Login/>}/>\n                                </Switch>\n                            </Suspense>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mstp = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<ComponentType>(\n    withRouter,\n    connect(mstp, {initializeApp}))(App)\n\nlet SocialApp = () => {\n    return (\n        <BrowserRouter basename={'sites/social'}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default SocialApp\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialApp from \"./components/App/App\";\n\n\nReactDOM.render(\n   <SocialApp/>, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__zKx4R\",\"error\":\"FormControls_error__frz7K\",\"inputWindow\":\"FormControls_inputWindow__2O6cV\",\"errorMessage\":\"FormControls_errorMessage__3coxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"app__wrapper\":\"App_app__wrapper__1z8PO\",\"content__wrapper\":\"App_content__wrapper__32aMC\",\"content__inner\":\"App_content__inner__37WXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fOnline__inner\":\"FriendsAvatar_fOnline__inner__3mbGn\",\"fOnline__name\":\"FriendsAvatar_fOnline__name__2sdlO\",\"fOnline__ava\":\"FriendsAvatar_fOnline__ava__22q3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__20PK_\",\"loginBtn\":\"Login_loginBtn__JiEkY\",\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","import React from 'react';\nimport styles from './FormControls.module.css';\nimport {WrappedFieldProps} from \"redux-form\";\n\n\nexport const Textarea = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\nexport const Input = (props: WrappedFieldProps) => {\n    const {input, meta, ...restProps} = props\n    const showError = props.meta.touched && props.meta.error\n    return (\n        <div className={`${styles.formControl} ${showError ? styles.error : ''}`}>\n            <div>\n                <textarea className={styles.inputWindow} {...props.input} {...restProps}/>\n            </div>\n            {showError && <div className={styles.errorMessage}>{props.meta.error}</div>}\n        </div>\n    );\n};\n\n\n\n","export const required = (value: string) => {\n    if (value) return undefined\n\n    return 'Обязательно заполните';\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Не больше ${maxLength} символов`\n\n    return undefined\n}\n\n\n\n\n\n\n","import React from 'react';\n// import preloader from '../../../images/spinner.svg';\nconst preloader = 'https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=790b7611ea276bbbbaa21051bf651344dc6397a74078b299&rid=giphy.gif&ct=g'\n\nconst Preloader = () => {\n    return (\n        <div style={{background: 'white'}}>\n            <img src={preloader} alt={preloader}/>\n        </div>\n    );\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"navbarItem\":\"Navbar_navbarItem__1xOtf\",\"navbarItem__link\":\"Navbar_navbarItem__link__2g1i6\",\"active\":\"Navbar_active__3mbhk\",\"friendsOnline\":\"Navbar_friendsOnline__2Jno3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fOnline\":\"FriendsOnline_fOnline__3EvEn\",\"fOnline__title\":\"FriendsOnline_fOnline__title__3WIS0\"};","import {PostDataType} from \"./store\";\nimport {profileApi, usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./reduxStore\";\n\n\nconst ADD_POST = \"ADD-POST\"\nconst DELETE_POST = 'DELETE_POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_USER_STATUS = 'SET_USER_STATUS'\nconst SET_UPDATE_STATUS = 'SET_UPDATE_STATUS'\n\nlet initialState = {\n    postData: [\n        {message: 'Hi, how are you?', id: 1, likeCount: 12},\n        {message: 'What do you think about JS?', id: 2, likeCount: 22},\n        {message: 'I learn not only JS but and TS!', id: 3, likeCount: 42},\n        {message: 'Oh, it\\'s cool', id: 4, likeCount: 23}\n    ],\n    // newPostText: '',\n    profile: null,\n    status: '',\n}\nexport type ProfileUserType = {\n    profile: {\n        userId: number\n        lookingForAJob: boolean\n        lookingForAJobDescription: string\n        fullName: string\n        contacts: ContactsType\n        photos: {\n            small: string\n            large: string\n        },\n    }\n    postData: Array<PostDataType>\n    newPostText: string\n    status: string\n}\ntype ContactsType = {\n    github: string\n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\n\ntype InitStateType = typeof initialState\n\nconst profileReducer = (state: InitStateType = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                postData: [newPost, ...state.postData],\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                postData: state.postData.filter(p => p.id !== action.postId)\n            }\n        }\n        case SET_USER_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_UPDATE_STATUS: {\n            return {...state, status: action.status}\n        }\n    }\n    return state\n}\n\nexport type ActionsTypes =\n    ReturnType<typeof addPostAC>\n    | ReturnType<typeof setUserProfile>\n    | ReturnType<typeof setStatus>\n    | ReturnType<typeof setUpdateStatus>\n    | ReturnType<typeof deletePost>\n\nexport const addPostAC = (newPostText: string) => {\n    return {\n        type: ADD_POST,\n        newPostText\n    } as const\n}\nexport const deletePost = (postId: number) => {\n    return {\n        type: DELETE_POST,\n        postId\n    } as const\n}\nexport const setUserProfile = (profile: ProfileUserType) => {\n    return {\n        type: SET_USER_PROFILE,\n        profile\n    } as const\n}\nexport const setStatus = (status: number) => {\n    return {\n        type: SET_USER_STATUS,\n        status\n    } as const\n}\nexport const setUpdateStatus = (status: string) => {\n    return {\n        type: 'SET_UPDATE_STATUS',\n        status\n    } as const\n}\nexport const getUserProfile = (userId: number) => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n    let response = await usersApi.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n    await dispatch(getStatus(userId))\n}\nexport const getStatus = (userId: number) => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsTypes>) => {\n    let response = await profileApi.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\n    let response = await profileApi.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setUpdateStatus(status))\n    }\n}\n\nexport default profileReducer"],"sourceRoot":""}